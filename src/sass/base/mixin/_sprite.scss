////////////////////////////////////////
// CSS Sprite
////////////////////////////////////////

// $name: sprite file name
// $sprites: sprite-map
// $block: display type
// $device-pixel-ratio: if use Retina-image, it should 2 and original-image-size is x2.
// $sprites-image: sprite-url($sprite) ;for optimize compile

@mixin sprite-bg-size($name, $sprites, $device-pixel-ratio: 1) {
    $_w: image-width(sprite-file($sprites, $name)) / $device-pixel-ratio;
    $_h: image-height(sprite-file($sprites, $name)) / $device-pixel-ratio;
    width: $_w;
    height: $_h;
    background-size: $_w auto;
}

@mixin sprite-bg-position($name, $sprites, $device-pixel-ratio: 1) {
    $_pos: sprite-position($sprites, $name);
    $_x: round(nth($_pos, 1) / $device-pixel-ratio);
    $_y: round(nth($_pos, 2) / $device-pixel-ratio);
    background-position: $_x $_y;
}

@mixin sprite-bg-image($sprites, $sprites-image, $display: block) {
  display: $display;
  background-image: $sprites-image;
  background-repeat: no-repeat;
}

// manager
@mixin sprite-bg($name, $sprites, $sprites-image, $display: block, $device-pixel-ratio: 1) {
  @include sprite-bg-image($sprites, $sprites-image, $display);
  @include sprite-bg-position($name, $sprites, $device-pixel-ratio);
  @include sprite-bg-size($name, $sprites, $device-pixel-ratio);
}

@mixin sprite-bg-base($name, $sprites, $sprites-image, $display: block, $device-pixel-ratio: 1) {
    @include sprite-bg-image($sprites, $sprites-image, $display);
    @include sprite-bg-size($name, $sprites, $device-pixel-ratio);
}
